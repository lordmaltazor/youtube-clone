{"version":3,"sources":["FirebaseConfig.js","comps/SignInPage.js","comps/Navbar.js","images/noThumbnailFallback.png","comps/VideoThumbnail.js","comps/HomePage.js","comps/VideoPage.js","comps/UploadVideoPage.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","SignInPage","className","href","target","onClick","provider","GoogleAuthProvider","signInWithPopup","Navbar","setPage","signOut","VideoThumbnail","video","useState","thumbnailURL","setThumbnailURL","src","onError","thumbnailFallback","alt","title","str","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","titleCase","poster","views","createdAt","toDate","toLocaleDateString","year","month","day","HomePage","videos","setCurrentVideoIndex","map","index","VideoPage","videoURL","hasLikedVideo","setHasLikedVideo","useEffect","collection","doc","id","update","FieldValue","increment","controls","autoPlay","likes","style","color","UploadVideoPage","user","videoFileInput","useRef","thumbnailFileInput","setVideo","thumbnail","setThumbnail","videoTitle","setVideoTitle","uploadingVideo","setUploadingVideo","videosRef","bytesToMb","bytes","parseInt","Math","floor","log","toFixed","postVideo","a","alert","videoStorageRef","storage","ref","child","name","put","thumbnailStorageRef","getDownloadURL","add","displayName","serverTimestamp","current","click","onChange","e","file","files","size","console","type","accept","value","placeholder","App","useAuthState","page","setVideos","currentVideoIndex","get","then","documents","arr","docs","push","data","videoDocs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9401fd0e.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nfirebase.initializeApp({\r\n    apiKey: \"AIzaSyDzhyM9tKzvTtLX7Nb8QvkJjDg4chCxThY\",\r\n    authDomain: \"video-website-7d3ef.firebaseapp.com\",\r\n    projectId: \"video-website-7d3ef\",\r\n    storageBucket: \"video-website-7d3ef.appspot.com\",\r\n    messagingSenderId: \"984504137450\",\r\n    appId: \"1:984504137450:web:6c2cd33d704918de540993\"\r\n})\r\n\r\nconst firestore = firebase.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport { firestore, auth };","import React from 'react';\r\nimport firebase from 'firebase';\r\nimport { auth } from '../FirebaseConfig';\r\n\r\nexport default function SignInPage() {\r\n    const signInWithGoogle = () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        auth.signInWithPopup(provider);\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-in-page\">\r\n            <h1 className=\"sign-in-title\">Welcome to YuoTube!</h1>\r\n\r\n            <h2 className=\"sign-in-description\">The best video sharing platform on the Internet - Made by <a href=\"https://github.com/lordmaltazor\" target=\"_blank\">Malte Svens√©n</a></h2>\r\n\r\n            <button className=\"button sign-in-button\" onClick={signInWithGoogle}>Sign in with Google</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { auth } from '../FirebaseConfig'\r\n\r\nexport default function Navbar({ setPage }) {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <button className=\"navbar-button navbar-title\" onClick={() => setPage(0)}>YuoTube</button>\r\n            <div className=\"navbar-spacer\"></div>\r\n            <button className=\"navbar-button navbar-home-button\" onClick={() => setPage(0)}>Home</button>\r\n            <button className=\"navbar-button navbar-sign-out-button\" onClick={() => auth.signOut()}>Sign out</button>\r\n            <button className=\"button navbar-upload-button\" onClick={() => setPage(2)}>Upload</button>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/noThumbnailFallback.21f68d4a.png\";","import React, { useState } from 'react';\r\nimport thumbnailFallback from '../images/noThumbnailFallback.png';\r\n\r\nexport default function VideoThumbnail({ video, onClick }) {\r\n    const [thumbnailURL, setThumbnailURL] = useState(video.thumbnailURL);\r\n\r\n    const titleCase = (str) => {\r\n        var splitStr = str.toLowerCase().split(' ');\r\n        for (var i = 0; i < splitStr.length; i++) {\r\n\r\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\r\n        }\r\n\r\n        return splitStr.join(' ');\r\n    }\r\n\r\n    return (\r\n        <button className=\"video-thumbnail\" onClick={onClick}>\r\n            <div className=\"thumbnail-container\">\r\n                <img className=\"thumbnail\" src={thumbnailURL} onError={() => setThumbnailURL(thumbnailFallback)} alt=\"Video Thumbnail\" />\r\n            </div>\r\n            <p className=\"video-thumbnail-text\">{video.title}</p>\r\n            <p className=\"video-thumbnail-text gray-text\">{titleCase(video.poster)}</p>\r\n            <p className=\"video-thumbnail-text gray-text\">{video.views} {video.views === 1 ? 'View' : 'Views'} ‚Ä¢ {video.createdAt && video.createdAt.toDate().toLocaleDateString(\"en-US\", { year: 'numeric', month: 'long', day: 'numeric' })}</p>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport VideoThumbnail from './VideoThumbnail';\r\n\r\nexport default function HomePage({ videos, setPage, setCurrentVideoIndex }) {\r\n    return (\r\n        <div className=\"homepage\">\r\n            <div className=\"videos\">\r\n                {videos.length > 0 ? videos.map((video, index) => <VideoThumbnail key={index} video={video} onClick={() => {\r\n                    setCurrentVideoIndex(index);\r\n                    setPage(1);\r\n                }} />) :\r\n                    <p className=\"no-videos-message\">There are no videos here yet! Click the \"upload\" button in the navigation-bar to upload the first video!</p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport firebase from 'firebase';\r\nimport { firestore } from '../FirebaseConfig';\r\n\r\nexport default function VideoPage({ videoURL, video }) {\r\n    const [hasLikedVideo, setHasLikedVideo] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Add another view\r\n        firestore.collection('videos').doc(video.id).update({\r\n            views: firebase.firestore.FieldValue.increment(1)\r\n        });\r\n    }, [])\r\n\r\n    function titleCase(str) {\r\n        var splitStr = str.toLowerCase().split(' ');\r\n        for (var i = 0; i < splitStr.length; i++) {\r\n            // You do not need to check if i is larger than splitStr length, as your for does that for you\r\n            // Assign it back to the array\r\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\r\n        }\r\n        // Directly return the joined string\r\n        return splitStr.join(' ');\r\n    }\r\n\r\n    const toggleLike = () => {\r\n        if (hasLikedVideo) {\r\n            setHasLikedVideo(false);\r\n\r\n            firestore.collection('videos').doc(video.id).update({\r\n                likes: firebase.firestore.FieldValue.increment(-1)\r\n            });\r\n        }\r\n        else {\r\n            setHasLikedVideo(true);\r\n\r\n            firestore.collection('videos').doc(video.id).update({\r\n                likes: firebase.firestore.FieldValue.increment(1)\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"video-page\">\r\n            <div className=\"video-container\">\r\n                <video src={videoURL} controls autoPlay>\r\n                    Sorry, your browser doesn't support embedded videos.\r\n                </video>\r\n            </div>\r\n\r\n            <div className=\"video-info\">\r\n                <div className=\"video-stats\">\r\n                    <p className=\"video-stat\">{video.title}</p>\r\n                    <p className=\"video-stat gray-text\">{titleCase(video.poster)}</p>\r\n                    <p className=\"video-stat gray-text\">{video.views} {video.views === 1 ? 'View' : 'Views'} ‚Ä¢ {video.createdAt.toDate().toLocaleDateString(\"en-US\", { year: 'numeric', month: 'long', day: 'numeric' })}</p>\r\n                </div>\r\n\r\n                <button className=\"video-like-button\" onClick={toggleLike}>\r\n                    <i className=\"fas fa-thumbs-up\" style={{ color: hasLikedVideo ? 'red' : 'white' }}></i>\r\n\r\n                    <p className=\"video-stat\">{video.likes} {video.likes === 1 ? 'Like' : 'Likes'}</p>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useRef } from 'react';\r\nimport '../App.css';\r\nimport firebase from 'firebase';\r\nimport { firestore } from '../FirebaseConfig';\r\n\r\nexport default function UploadVideoPage({ user, videos, setPage }) {\r\n    const videoFileInput = useRef(null);\r\n    const thumbnailFileInput = useRef(null);\r\n\r\n    const [video, setVideo] = useState(null);\r\n    const [thumbnail, setThumbnail] = useState(null);\r\n    const [videoTitle, setVideoTitle] = useState('');\r\n\r\n    const [uploadingVideo, setUploadingVideo] = useState(false); // Whether or not we are currently in the process of uploading a new video to firebase\r\n\r\n    const videosRef = firestore.collection('videos');\r\n\r\n    const bytesToMb = (bytes) => {\r\n        const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)), 10)\r\n\r\n        if (i === 0) {\r\n            return bytes;\r\n        }\r\n        else {\r\n            return (bytes / (1024 ** i)).toFixed(1);\r\n        }\r\n    }\r\n\r\n    const updateVideo = (e) => {\r\n        const file = e.target.files[0];\r\n\r\n        if (bytesToMb(file.size) < 10) {\r\n            setVideo(file);\r\n\r\n            console.log(\"Added \" + videoFileInput.current.files[0].name + \"!\");\r\n        }\r\n        else {\r\n            alert(`Your files cannot be bigger than 10mb, yours was ${bytesToMb(file.size)}mb!`);\r\n        }\r\n    }\r\n\r\n    const updateThumbnail = (e) => {\r\n        setThumbnail(e.target.files[0]);\r\n\r\n        //console.log(\"Added \" + videoFileInput.current.files[0].name + \"!\");\r\n    }\r\n\r\n    const updateVideoTitle = (e) => {\r\n        setVideoTitle(e.target.value);\r\n    }\r\n\r\n    const postVideo = async () => {\r\n        if (videoTitle === '') {\r\n            alert(\"You have to enter a video title!\");\r\n\r\n            return;\r\n        }\r\n\r\n        setUploadingVideo(true);\r\n\r\n        // Upload video to firebase storage\r\n        const videoStorageRef = firebase.storage().ref().child(`videos/${video.name}`);\r\n        await videoStorageRef.put(video);\r\n\r\n        // Upload thumbnail to firebase storage\r\n        const thumbnailStorageRef = firebase.storage().ref().child(`thumbnails/${video.name}`);\r\n        await thumbnailStorageRef.put(thumbnail);\r\n\r\n        // Add video document to firestore\r\n        const videoURL = await videoStorageRef.getDownloadURL();\r\n        const thumbnailURL = await thumbnailStorageRef.getDownloadURL();\r\n\r\n        await videosRef.add({\r\n            title: videoTitle,\r\n            videoURL: videoURL,\r\n            thumbnailURL: thumbnailURL,\r\n            poster: user.displayName,\r\n            views: 0,\r\n            likes: 0,\r\n            index: videos.length,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        });\r\n\r\n        setUploadingVideo(false);\r\n\r\n        setPage(0);\r\n    }\r\n\r\n    return (\r\n        <div className=\"upload-video-page\">\r\n            <h1 className=\"upload-video-title\">Upload a new video to yuotube:</h1>\r\n\r\n            {!video && <button className=\"button select-file-button\" onClick={() => videoFileInput.current.click()}>Choose Video</button>}\r\n            {!thumbnail && <button className=\"button select-file-button\" onClick={() => thumbnailFileInput.current.click()}>Choose Thumbnail</button>}\r\n\r\n            <input className=\"file-input\" ref={videoFileInput} onChange={updateVideo} type=\"file\" accept=\"video/*\" />\r\n            <input className=\"file-input\" ref={thumbnailFileInput} onChange={updateThumbnail} type=\"file\" accept=\"image/*\" />\r\n\r\n            {video && thumbnail && <input className=\"video-title-input\" onChange={updateVideoTitle} type=\"text\" placeholder=\"Video title\" />}\r\n\r\n            {video && thumbnail && <button className=\"button post-video-button\" onClick={postVideo}>Post</button>}\r\n\r\n            {uploadingVideo && <div className=\"uploading-video-modal\">\r\n                <div className=\"loading-circle\"></div>\r\n\r\n                <p className=\"uploading-video-text\">Uploading video...</p>\r\n            </div>}\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\nimport { firestore, auth } from './FirebaseConfig';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport SignInPage from './comps/SignInPage';\nimport Navbar from './comps/Navbar';\nimport HomePage from './comps/HomePage';\nimport VideoPage from './comps/VideoPage';\nimport UploadVideoPage from './comps/UploadVideoPage';\n\nexport default function App() {\n    const [user] = useAuthState(auth); // This object is null if the user is not authenticated yet\n\n    const [page, setPage] = useState(0); // 0 = home | 1 = watch video | 2 = upload video\n\n    const videosRef = firestore.collection('videos');\n    //const [videos] = useCollectionData(videosRef, { idField: 'id' }); // All the firestore documents of videos\n    const [videos, setVideos] = useState([]);\n\n    const [currentVideoIndex, setCurrentVideoIndex] = useState(null); // The index of the video we're currently watching\n\n    useEffect(() => {\n        if (!user) {\n            return;\n        }\n\n        // Get all firestore documents\n        videosRef.get().then((documents) => {\n            let arr = [];\n\n            for (let i = 0; i < documents.docs.length; i++) {\n                arr.push({ id: documents.docs[i].id, ...documents.docs[i].data() });\n            }\n\n            setVideos(arr);\n        });\n    }, [videosRef])\n\n    return (\n        <div className=\"app\">\n            {user && <Navbar setPage={setPage} />}\n\n            {!user ? <SignInPage /> :\n                page === 2 ? <UploadVideoPage user={user} videos={videos} setPage={setPage} /> :\n                    page === 1 ? <VideoPage videoURL={videos[currentVideoIndex].videoURL} video={videos[currentVideoIndex]} /> :\n                        <HomePage videos={videos} videoDocs={videos} setPage={setPage} setCurrentVideoIndex={setCurrentVideoIndex} />}\n        </div>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}