{"version":3,"sources":["FirebaseConfig.js","comps/SignInPage.js","comps/Navbar.js","comps/VideoThumbnail.js","comps/HomePage.js","comps/VideoPage.js","comps/UploadVideoPage.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","SignInPage","className","onClick","provider","GoogleAuthProvider","signInWithPopup","Navbar","setPage","signOut","VideoThumbnail","video","src","thumbnailURL","alt","title","str","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","titleCase","poster","views","createdAt","toDate","toLocaleDateString","year","month","day","HomePage","videos","setCurrentVideoIndex","map","index","VideoPage","videoURL","useState","hasLikedVideo","setHasLikedVideo","useEffect","collection","doc","id","update","FieldValue","increment","controls","autoPlay","likes","style","color","UploadVideoPage","user","videoFileInput","useRef","thumbnailFileInput","setVideo","thumbnail","setThumbnail","videoTitle","setVideoTitle","uploadingVideo","setUploadingVideo","videosRef","bytesToMb","bytes","parseInt","Math","floor","log","toFixed","postVideo","a","alert","videoStorageRef","storage","ref","child","name","put","thumbnailStorageRef","getDownloadURL","add","displayName","serverTimestamp","current","click","onChange","e","file","target","files","size","console","type","accept","value","placeholder","App","useAuthState","page","useCollectionData","idField","currentVideoIndex","videoDocs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76523919.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nfirebase.initializeApp({\r\n    apiKey: \"AIzaSyDzhyM9tKzvTtLX7Nb8QvkJjDg4chCxThY\",\r\n    authDomain: \"video-website-7d3ef.firebaseapp.com\",\r\n    projectId: \"video-website-7d3ef\",\r\n    storageBucket: \"video-website-7d3ef.appspot.com\",\r\n    messagingSenderId: \"984504137450\",\r\n    appId: \"1:984504137450:web:6c2cd33d704918de540993\"\r\n})\r\n\r\nconst firestore = firebase.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport { firestore, auth };","import React from 'react';\r\nimport firebase from 'firebase';\r\nimport { auth } from '../FirebaseConfig';\r\n\r\nexport default function SignInPage() {\r\n    const signInWithGoogle = () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        auth.signInWithPopup(provider);\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-in-page\">\r\n            <h1 className=\"sign-in-title\">Welcome to YuoTube!</h1>\r\n\r\n            <button className=\"sign-in-button\" onClick={signInWithGoogle}>Sign in with Google</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { auth } from '../FirebaseConfig'\r\n\r\nexport default function Navbar({ setPage }) {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <button className=\"navbar-button title\" onClick={() => setPage(0)}>YuoTube</button>\r\n            <div className=\"navbar-spacer\"></div>\r\n            <button className=\"navbar-button\" onClick={() => setPage(0)}>Home</button>\r\n            <button className=\"navbar-button\" onClick={() => setPage(2)}>Upload</button>\r\n            <button className=\"navbar-button\" onClick={() => auth.signOut()}>Sign out</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function VideoThumbnail({ video, onClick }) {\r\n    const titleCase = (str) => {\r\n        var splitStr = str.toLowerCase().split(' ');\r\n        for (var i = 0; i < splitStr.length; i++) {\r\n\r\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\r\n        }\r\n\r\n        return splitStr.join(' ');\r\n    }\r\n\r\n    return (\r\n        <button className=\"video-thumbnail\" onClick={onClick}>\r\n            <div className=\"thumbnail-container\">\r\n                <img className=\"thumbnail\" src={video.thumbnailURL} alt=\"Video Thumbnail\" />\r\n            </div>\r\n            <p className=\"video-thumbnail-title\">{video.title}</p>\r\n            <p className=\"video-thumbnail-views gray-text\">{titleCase(video.poster)}</p>\r\n            <p className=\"video-thumbnail-views gray-text\">{video.views} {video.views === 1 ? 'View' : 'Views'} â€¢ {video.createdAt && video.createdAt.toDate().toLocaleDateString(\"en-US\", { year: 'numeric', month: 'long', day: 'numeric' })}</p>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport VideoThumbnail from './VideoThumbnail';\r\n\r\nexport default function HomePage({ videos, setPage, setCurrentVideoIndex }) {\r\n    //console.log(\"Videos: \" + videos.length + \" | Thumbnails: \" + thumbnails.length);\r\n\r\n    return (\r\n        <div className=\"homepage\">\r\n            <div className=\"videos\">\r\n                {videos.map((video, index) => <VideoThumbnail key={index} video={video} onClick={() => {\r\n                    setCurrentVideoIndex(index);\r\n                    setPage(1);\r\n                }} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport firebase from 'firebase';\r\nimport { firestore } from '../FirebaseConfig';\r\n\r\nexport default function VideoPage({ videoURL, video }) {\r\n    const [hasLikedVideo, setHasLikedVideo] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Add another view\r\n        firestore.collection('videos').doc(video.id).update({\r\n            views: firebase.firestore.FieldValue.increment(1)\r\n        });\r\n    }, [])\r\n\r\n    function titleCase(str) {\r\n        var splitStr = str.toLowerCase().split(' ');\r\n        for (var i = 0; i < splitStr.length; i++) {\r\n            // You do not need to check if i is larger than splitStr length, as your for does that for you\r\n            // Assign it back to the array\r\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\r\n        }\r\n        // Directly return the joined string\r\n        return splitStr.join(' ');\r\n    }\r\n\r\n    const toggleLike = () => {\r\n        if (hasLikedVideo) {\r\n            setHasLikedVideo(false);\r\n\r\n            firestore.collection('videos').doc(video.id).update({\r\n                likes: firebase.firestore.FieldValue.increment(-1)\r\n            });\r\n        }\r\n        else {\r\n            setHasLikedVideo(true);\r\n\r\n            firestore.collection('videos').doc(video.id).update({\r\n                likes: firebase.firestore.FieldValue.increment(1)\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"video-page\">\r\n            <div className=\"video-container\">\r\n                <video src={videoURL} controls autoPlay>\r\n                    Sorry, your browser doesn't support embedded videos.\r\n                </video>\r\n            </div>\r\n\r\n            <div className=\"video-info\">\r\n                <div className=\"video-stats\">\r\n                    <p className=\"video-stat\">{video.title}</p>\r\n                    <p className=\"video-stat gray-text\">{titleCase(video.poster)}</p>\r\n                    <p className=\"video-stat gray-text\">{video.views} {video.views === 1 ? 'View' : 'Views'} â€¢ {video.createdAt.toDate().toLocaleDateString(\"en-US\", { year: 'numeric', month: 'long', day: 'numeric' })}</p>\r\n                </div>\r\n\r\n                <button className=\"video-like-button\" onClick={toggleLike}>\r\n                    <i className=\"fas fa-thumbs-up\" style={{ color: hasLikedVideo ? 'red' : 'white' }}></i>\r\n\r\n                    <p className=\"video-stat\">{video.likes} {video.likes === 1 ? 'Like' : 'Likes'}</p>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useRef } from 'react';\r\nimport '../App.css';\r\nimport firebase from 'firebase';\r\nimport { firestore } from '../FirebaseConfig';\r\n\r\nexport default function UploadVideoPage({ user, setPage }) {\r\n    const videoFileInput = useRef(null);\r\n    const thumbnailFileInput = useRef(null);\r\n\r\n    const [video, setVideo] = useState(null);\r\n    const [thumbnail, setThumbnail] = useState(null);\r\n    const [videoTitle, setVideoTitle] = useState('');\r\n\r\n    const [uploadingVideo, setUploadingVideo] = useState(false); // Whether or not we are currently in the process of uploading a new video to firebase\r\n\r\n    const videosRef = firestore.collection('videos');\r\n\r\n    const bytesToMb = (bytes) => {\r\n        if (bytes === 0) return 'n/a'\r\n        const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)), 10)\r\n        if (i === 0) return bytes\r\n        return (bytes / (1024 ** i)).toFixed(1)\r\n    }\r\n\r\n    const updateVideo = (e) => {\r\n        const file = e.target.files[0];\r\n\r\n        if (bytesToMb(file.size) < 10) {\r\n            setVideo(file);\r\n\r\n            console.log(\"Added \" + videoFileInput.current.files[0].name + \"!\");\r\n        }\r\n        else {\r\n            alert(`Your files cannot be bigger than 10mb, yours was ${bytesToMb(file.size)}mb!`);\r\n        }\r\n    }\r\n\r\n    const updateThumbnail = (e) => {\r\n        setThumbnail(e.target.files[0]);\r\n\r\n        //console.log(\"Added \" + videoFileInput.current.files[0].name + \"!\");\r\n    }\r\n\r\n    const updateVideoTitle = (e) => {\r\n        setVideoTitle(e.target.value);\r\n    }\r\n\r\n    const postVideo = async () => {\r\n        if (videoTitle == '') {\r\n            alert(\"You have to enter a video title!\");\r\n\r\n            return;\r\n        }\r\n\r\n        setUploadingVideo(true);\r\n\r\n        // Upload video to firebase storage\r\n        const videoStorageRef = firebase.storage().ref().child(`videos/${video.name}`);\r\n        await videoStorageRef.put(video);\r\n\r\n        // Upload thumbnail to firebase storage\r\n        const thumbnailStorageRef = firebase.storage().ref().child(`thumbnails/${video.name}`);\r\n        await thumbnailStorageRef.put(thumbnail);\r\n\r\n        // Add video document to firestore\r\n        const videoURL = await videoStorageRef.getDownloadURL();\r\n        const thumbnailURL = await thumbnailStorageRef.getDownloadURL();\r\n\r\n        await videosRef.add({\r\n            title: videoTitle,\r\n            videoURL: videoURL,\r\n            thumbnailURL: thumbnailURL,\r\n            poster: user.displayName,\r\n            views: 0,\r\n            likes: 0,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        });\r\n\r\n        setUploadingVideo(false);\r\n\r\n        setPage(0);\r\n    }\r\n\r\n    return (\r\n        <div className=\"upload-video-page\">\r\n            <h1 className=\"upload-video-title\">Upload a new video to yuotube:</h1>\r\n\r\n            {!video && <button className=\"select-file-button\" onClick={() => videoFileInput.current.click()}>Choose Video</button>}\r\n            {!thumbnail && <button className=\"select-file-button\" onClick={() => thumbnailFileInput.current.click()}>Choose Thumbnail</button>}\r\n\r\n            <input className=\"file-input\" ref={videoFileInput} onChange={updateVideo} type=\"file\" accept=\"video/*\" />\r\n            <input className=\"file-input\" ref={thumbnailFileInput} onChange={updateThumbnail} type=\"file\" accept=\"image/*\" />\r\n\r\n            {video && thumbnail && <input className=\"video-title-input\" onChange={updateVideoTitle} type=\"text\" placeholder=\"Video title\" />}\r\n\r\n            {video && thumbnail && <button className=\"post-video-button\" onClick={postVideo}>Post</button>}\r\n\r\n            {uploadingVideo && <div className=\"uploading-video-modal\">\r\n                <div className=\"loading-circle\"></div>\r\n\r\n                <p className=\"uploading-video-text\">Uploading video...</p>\r\n            </div>}\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport { firestore, auth } from './FirebaseConfig';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport SignInPage from './comps/SignInPage';\nimport Navbar from './comps/Navbar';\nimport HomePage from './comps/HomePage';\nimport VideoPage from './comps/VideoPage';\nimport UploadVideoPage from './comps/UploadVideoPage';\n\nexport default function App() {\n    const [user] = useAuthState(auth); // This object is null if the user is not authenticated yet\n\n    const [page, setPage] = useState(0); // 0 = home | 1 = watch video | 2 = upload video\n\n    const videosRef = firestore.collection('videos');\n    const [videos] = useCollectionData(videosRef, { idField: 'id' }); // All the firestore documents of videos\n\n    const [currentVideoIndex, setCurrentVideoIndex] = useState(null); // The index of the video we're currently watching\n\n    return (\n        <div className=\"app\">\n            {user && <Navbar setPage={setPage} />}\n\n            {!user ? <SignInPage /> :\n                page === 2 ? <UploadVideoPage user={user} setPage={setPage} /> :\n                    !videos ? (<div className=\"app loading-app\">\n                        <div className=\"loading-circle\"></div>\n                    </div>) :\n                        page === 1 ? <VideoPage videoURL={videos[currentVideoIndex].videoURL} video={videos[currentVideoIndex]} /> :\n                            <HomePage videos={videos} videoDocs={videos} setPage={setPage} setCurrentVideoIndex={setCurrentVideoIndex} />}\n        </div>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}